var tipuesearch = {"pages":[{"title":"About","text":"Python: https://40423222.github.io/Python/blog Arduino: https://40423222.github.io/Arduino/blog Gripper: https://40423222.github.io/Gripper/blog Unlock: https://40423222.github.io/Unlock/blog HTML: https://40423222.github.io/HTML/blog HexadecimalColorTable: https://40423222.github.io/HexadecimalColorTable/blog","url":"./pages/about/","tags":"misc"},{"title":"第16課 - type( ), mutable and Immutable, copy( ) 列表更多應用","text":"type( ), mutable and Immutable, copy( ) 列表更多應用 參考資訊: 網站: https://automatetheboringstuff.com/chapter4/ 說明: type( ), mutable and Immutable, copy( ) 列表更多應用 type( ): 顯示( )內的類型 常見的類型: 列表: List 元組: Tuple 字串: Str 整數: Int 浮點數: Float list( ) and tuple( ): 將( )內的類型轉為list or tuple,也可以轉為str int float Mutable and Immutable: 可變和不可變的數據類型 注意: 字串不能被更改內容,只能被覆蓋或改類型 Strings with List: 對字串使用列表指令 可以顯示第n位字的字串 和 查詢字是否在這字串內 注意: 但不能更改字串內容,想要更改字串可參考 Mutable and Immutable: random with List: 隨機顯示列表內容 利用random模組生產一個亂碼,再利用列表的index來顯示列表內容 Def with List: 用def添加值給List 用def建立name(someParameter),並輸入要添加值的內容,最後將listName丟入someParameter添加值 list ID: 列表共用性 變數值可以互換,因為會複製出新的變數值 列表不可以互換,因為不會複製出新的列表 copy( ) with List: 複製列表 因為列表不會複製出新的列表,所以就要使用copy模組 type( ): list( ) and tuple( ): Mutable and Immutable: Strings with List: random with List: Def with List: list ID: copy( ) with List:","url":"./Lesson 16.html","tags":"Python"},{"title":"第15課 - index( ), append( ), insert( ), remove( ), sort( ) 用於列表的指令","text":"用於列表指令的介紹 參考資訊: 網站: https://automatetheboringstuff.com/chapter4/ 影片: https://www.youtube.com/watch?v=Z9IxxW7428A 說明: index( ), append( ), insert( ), remove( ), sort( ) 用於列表的指令 收尋出List的內容 index( ) 添加新的值給列表 append( ): 只能放置在端點 insert( ): 可以指定新增位置 刪除列表中的值 remove( ) 排列List內值的順序 sort( ) index( ): append( ) and insert( ): remove( ): sort( ):","url":"./Lesson 15.html","tags":"Python"},{"title":"第14課 - forRange with Lists forRange與列表","text":"關於for的range( )配合列表的介紹 參考資訊: 網站: https://automatetheboringstuff.com/chapter4/ 影片: https://www.youtube.com/watch?v=umTnflPbYww 說明: forRange with Lists forRange與列表 for i in range(4) 等於 for i in [0, 1, 2, 3],所以在L-13的Lists能使用for i in ListsName 常見的Python所使用的range範圍為 range(len(someList)),也就是看列表長度 可利用List來建立operators(運算符號),利用值in列表得出True or False 更多功能在下方圖片介紹 forRange跟Lists的用法:","url":"./Lesson 14.html","tags":"Python"},{"title":"第13課 - Lists 列表","text":"關於列表功用的介紹 參考資訊: 網站: https://automatetheboringstuff.com/chapter4/ 影片: https://www.youtube.com/watch?v=48WXHT0dfEY 說明: Lists 列表 name [0號, 1號, 2號] 就像Arduino的矩陣 注意: 第一位以0這數字來表示 例如對Shell輸入: >>> spam = ['cat', 'bat', 'rat', 'elephant'] >>> spam ['cat', 'bat', 'rat', 'elephant'] 更多功能在下方圖片介紹 Lists 列表的用法: 資料自動製成列表:","url":"./Lesson 13.html","tags":"Python"},{"title":"Python flowchart 目錄","text":"快速預覽關於Python的資料 參考資訊: 網站: https://40423222.github.io/Python/blog/ Python 啟動Python: 下載Python 開啟IDLE 建立New File完成程式,並執行 觀念: 運算符號 字串的使用 Variables(變數) Boolean 變數範圍 Global => 全局變量 Local => 局部變量 Error Hamdling => 處裡錯誤 try: except: 指令: 在Shell顯示 print( ) print()之進階說明 在Shell輸入 input( ) 整數化 and 字串化 int( ) and str( ) 字串長度 len( ): 條件判斷 if 條件: elif 條件: else: 迴圈 While (變數 符號 條件): for name in range(開始值, 停止值, 間隔): 跳出迴圈(停止迴圈) break 回到迴圈初始點 continue 定義程式為名稱 def name(anotherName): 模組: import moduleName random random.randint(起始值, 最大值) => 設定範圍 sys sys.exit() => 強制停止程式 程式: Guess the Number => 猜數字遊戲 例外: HTML背景 背景音樂: 參考網站: https://www.youtube.com/watch?v=A2AydJcUKR8","url":"./Flowchart.html","tags":"Python"},{"title":"第12課 - Guess the Number 猜數字遊戲","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter3/ 影片: https://www.youtube.com/watch?v=48WXHT0dfEY 說明: Guess the Number 先利用import random的random.randint(minNumber, maxNumber), 來建立minNumber~maxNumber的一個亂數 建立好一個亂數後, 使用for guessesTaken in range(minGuesses, maxGuesses), 來設定開始(minGuesses)到結束(maxGuesses)的執行次數 並在在for回圈內定義if,來提示猜的數字要在大來是要在小, 當 猜對時 或 超過值型次數時 會跳出for迴圈 最後再用if來檢查你有沒有答對 Guesses the Number:","url":"./Lesson 12.html","tags":"Python"},{"title":"第11課 - Error Hamdling 錯誤發生處理","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter3/ 影片: https://www.youtube.com/watch?v=qS0UkqaYmfU&feature 說明: Error Hamdling try: 說明: 將會檢查在try內的內容,如果檢查到錯誤,將啟動except except: 說明: 放入發生錯誤時,要執行的指令 可以設定要執行的錯誤種類 例: except NameError: 指定NameError的錯誤,執行這指令 以下還有: ZeroDivisionError(分母為零) 例: 10/0(分母為零) NameError(變數沒定義) 例: 10 / maber(maber沒定義) error: try except: try except-2: try except-3:","url":"./Lesson 11.html","tags":"Python"},{"title":"第10課 - Global Scope and Local Scope 局部變量跟全局變量","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter3/ 影片: https://www.youtube.com/watch?v=M-CoVBK_bLE&feature 說明: Global and Local Local Variables(局部變量) 使用在def內的變量 例: def spam(): eggs = 10 # local variables Global Variables(全局變量) 沒參數命名,也沒使用代號,直接定義 例: eggs = 10 # global variables def and print: def in def and print: global def: global variables: same name LG variables:","url":"./Lesson 10.html","tags":"Python"},{"title":"第9課 - def and print( ) 定義程式內部的程式名稱","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter3/ 影片: https://www.youtube.com/watch?v=WB4hJJkfhLU 說明: def and print( ) 主要內容: def: 定義變數為程式 更詳細說明print( ) def hello(): def hello(name): def plus random: None: print:","url":"./Lesson 9.html","tags":"Python"},{"title":"第8課 - import, sys.exit( ), random.randint( ) 啟動模組","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter2/ 影片: https://www.youtube.com/watch?v=xJLj6fWfw6k 說明: import, random and sys import: 啟動模組 random模組 random.randint(起始值, 最大值): 範圍亂數 sys模組 sys.exit( ): 強制退出 random.randint: sys.exit:","url":"./Lesson 8.html","tags":"Python"},{"title":"第7課 - for Loops and range( ) 範圍指令","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter2/ 影片: https://www.youtube.com/watch?v=HFQGxh1jY3g 說明: for i in range(起始值, 結束值, 間隔): 能生產出規律的數列 range如果沒定義起始值,會從0開始 壘加到最後的值,值 = (結束值-1) 能設定起始值 結束值 間隔 0 to 5: while effect: 0 to 100 plus: start to stop: start to stop interval:","url":"./Lesson 7.html","tags":"Python"},{"title":"第6課 - While Loops, break, and continue 迴圈指令","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter2/ 影片: https://www.youtube.com/watch?v=885qKiiKisI&feature=youtu.be 說明: while (變數 符號 條件): 有迴圈(就像Arduino的for迴圈) 注意: 符合條件就會跳出迴圈(不符合條件才會執行) while-variable + 1: while-0 to 10-else: while-error: while-break: while-not stop: while-continue:","url":"./Lesson 6.html","tags":"Python"},{"title":"第5課 - if, elif, and else 條件指令","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter2/ 影片: https://www.youtube.com/watch?v=lWeCgEbk-Ro&feature=youtu.be 說明: if (變數 符號 條件): 沒迴圈,單純的判斷 if 起始頭,符合條件執行 elif 要設定條件,放在開頭以後(放置在if後方,else前方) else 到這直接執行,不需要條件(放置在尾端) 注意: 符合條件,就會接結束if if: if-else: if-elif-else:","url":"./Lesson 5.html","tags":"Python"},{"title":"第4課 - 比較跟布林運算符號","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter2/ 影片: https://www.youtube.com/watch?v=4XA9CKJJbr4 Comparison Operators(比較運算符號): Comparison Operators(比對運算符號) Operators == != < > <= >= 功能 相等 不相等 小於 大於 小於並相等 大於並相等 Boolean Operators(布林運算符號): Boolean Operators(布林運算符號) Operators and or not if: 帳密在於程式碼內,所以只能在編輯程式碼時才能變更 if-改: 可以在Shell介面輸入帳密 註解:帳號可以隨便取,密碼一定要輸入正確","url":"./Lesson 4.html","tags":"Python"},{"title":"第3課 - 你的第一個程式","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter1/ 影片: https://www.youtube.com/watch?v=buMTH6ICnqk writing Our first program(寫出我們第一個程式): 開起New File 建立程式: 建立完成,Save後,點擊Run/Run Moodule,來啟動程式 執行程式: 黑色字體,是使用者要輸入的資訊. 如圖,ABCD和18 執行完就會自跳出程式 print( ): 輸入在( )內的字串,會顯示在Shell input( ): int( ) and str( ): int( ): 將 有字串的數字 轉為整數,例如: int('123') = 123,而不是'123',int(12.123) = 12,int(12.123+1) = 13 str( ): 將 沒有字串的數字 轉為字串,例如: str(123) = '123',而不是123 len( ): 顯示有幾個字串,例如: len('123Abc') = 6","url":"./Lesson 3.html","tags":"Python"},{"title":"第2課 - 表達式，數據類型和變量","text":"參考資訊: 網站: https://automatetheboringstuff.com/chapter1/ 影片: https://www.youtube.com/watch?v=7qHMXu99d88 第一步: 在開始使用Python前,先 點這 免費下載Python 開啟IDLE: 點擊電腦左下角,就會有收尋功能,輸入Python就可以找到IDLE Expression(顯示) = Values(值) + Operators(運算符號) Order of Operations(執行順序) 1.Parentheses(括號) 2.Multiplication(乘) / Division(除) 3.Addition(加) / Subtraction(減) Data Types(數據類型): integers \"ints\"(整數) Ex: 1 or 2 or 3 Floating point \"floats\"(浮點數) Ex: 0.123 or 1.321 說明: 主要差別,有小數點(floats)跟沒小數點(ints) String Concatenation(字串連接): Variables(變數): Assignment Statement: spam=42 說明: 輸入spam將會顯示42 Recap(複習): IDLE is an editor Interactice Shell (>>>) & File Editor Int, Float, String 'Hello World' spam = 42 spam + 1","url":"./Lesson 2.html","tags":"Python"}]};